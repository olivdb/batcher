{
  "contractName": "BatcherFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "batcher",
          "type": "address"
        }
      ],
      "name": "Created",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "build",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "batcher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "build",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "batcher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"batcher\",\"type\":\"address\"}],\"name\":\"Created\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"build\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"batcher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"build\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"batcher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ovdbigge/argent/batcher/contracts/BatcherFactory.sol\":\"BatcherFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ovdbigge/argent/batcher/contracts/Batcher.sol\":{\"keccak256\":\"0x6146d62b30d3cda41e9fb4b036a9401b5a182d1ba3cea317eaa39ad3c410b97f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3a32c55227fc621f92aaa5e678e23c3263860ecf12a7d72ccfc861c43ca38439\",\"dweb:/ipfs/QmVyVx5M6vZhAhwpsZUvhsUZajJ6rTF6MQmrLN4RFAEwbo\"]},\"/Users/ovdbigge/argent/batcher/contracts/BatcherFactory.sol\":{\"keccak256\":\"0x7cec5bc04aaaab2766f86d2c5c04119fde5d2e98aeb791b221b6f17954477596\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f8de2de1942993166546d005db5475eae968b79581e8e5a201e2f897ab662c27\",\"dweb:/ipfs/QmXUsz5piYN3yNdDRyxjfGcZH8SzH9Wne9uaF49TJxVE64\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x9c5342beaabc260ed2a9c31357dd1860d0957c8604fc1fdd638444d8f2d5e1fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c21f7c2d4f66aad0fadcdee923eb5fa19edb497f6714bfbea296a062b15f57\",\"dweb:/ipfs/QmPEhC47Bg85ScsLgAZoskaSEVp5wReJ5ZxcRiNqqUaBXQ\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24b9327845538a7d499241c6a015a19f90d810f275ff3fa7e601bcb6332698e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df31e330970fe023920bf803c785eebce3b239d55de8bc4df144670de3780d3\",\"dweb:/ipfs/QmQC8uSVAFMwu2czcP2hoe1Et53Hg4qQJ7iPqbcUeoqE7A\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061145b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638e1a55fc1461003b578063f3701da214610059575b600080fd5b610043610089565b6040516100509190610232565b60405180910390f35b610073600480360381019061006e91906101a6565b610099565b6040516100809190610232565b60405180910390f35b600061009433610099565b905090565b60006040516100a790610184565b604051809103906000f0801580156100c3573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b836040518263ffffffff1660e01b81526004016100ff91906101fc565b600060405180830381600087803b15801561011957600080fd5b505af115801561012d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167f587ece4cd19692c5be1a4184503d607d45542d2aca0698c0068f52e09ccb541c826040516101779190610217565b60405180910390a2919050565b611147806102df83390190565b6000813590506101a0816102c7565b92915050565b6000602082840312156101b857600080fd5b60006101c684828501610191565b91505092915050565b6101d881610291565b82525050565b6101e78161025f565b82525050565b6101f68161024d565b82525050565b600060208201905061021160008301846101ed565b92915050565b600060208201905061022c60008301846101cf565b92915050565b600060208201905061024760008301846101de565b92915050565b600061025882610271565b9050919050565b600061026a82610271565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029c826102a3565b9050919050565b60006102ae826102b5565b9050919050565b60006102c082610271565b9050919050565b6102d08161024d565b81146102db57600080fd5b5056fe608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b61106c806100db6000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100655780638da5cb5b1461007c5780639c328fb3146100a7578063e4c73dec146100d2578063f2fde38b146100ee578063f8a8fd6d1461011757610060565b3661006057005b600080fd5b34801561007157600080fd5b5061007a61012e565b005b34801561008857600080fd5b50610091610281565b60405161009e9190610d03565b60405180910390f35b3480156100b357600080fd5b506100bc6102aa565b6040516100c99190610d5e565b60405180910390f35b6100ec60048036038101906100e79190610b7a565b6102b0565b005b3480156100fa57600080fd5b5061011560048036038101906101109190610b51565b6106f0565b005b34801561012357600080fd5b5061012c6108b2565b005b6101366108cd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90610d3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b6102b86108cd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033c90610d3e565b60405180910390fd5b60008167ffffffffffffffff811115610387577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103b55781602001602082028036833780820191505090505b50905060005b83518110156106ea5760008482815181106103ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040015190506000858381518110610448577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160800151905060005b8581101561051257600082828151811061049c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060038111156104fe5760008683815181106104ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508082602001860152505b50808061050a90610f61565b915050610459565b5060008087858151811061054f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168886815181106105aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160200151856040516105c49190610cec565b60006040518083038185875af1925050503d8060008114610601576040519150601f19603f3d011682016040523d82523d6000602084013e610606565b606091505b50915091508161061a573d6000803e3d6000fd5b6000888681518110610655577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160600151905060008111156106d257818060200190518101906106809190610bce565b8760018361068e9190610eaf565b815181106106c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b505050505080806106e290610f61565b9150506103bb565b50505050565b6106f86108cd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90610d3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ec90610d1e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60018060008282546108c49190610e59565b92505081905550565b600033905090565b60006108e86108e384610daa565b610d79565b9050808382526020820190508260005b85811015610928578135850161090e8882610a6f565b8452602084019350602083019250506001810190506108f8565b5050509392505050565b600061094561094084610dd6565b610d79565b9050808382526020820190508285602086028201111561096457600080fd5b60005b85811015610994578161097a8882610b27565b845260208401935060208301925050600181019050610967565b5050509392505050565b60006109b16109ac84610e02565b610d79565b9050828152602081018484840111156109c957600080fd5b6109d4848285610f1f565b509392505050565b6000813590506109eb81611008565b92915050565b600082601f830112610a0257600080fd5b8135610a128482602086016108d5565b91505092915050565b600082601f830112610a2c57600080fd5b8135610a3c848260208601610932565b91505092915050565b600082601f830112610a5657600080fd5b8135610a6684826020860161099e565b91505092915050565b600060a08284031215610a8157600080fd5b610a8b60a0610d79565b90506000610a9b848285016109dc565b6000830152506020610aaf84828501610b27565b602083015250604082013567ffffffffffffffff811115610acf57600080fd5b610adb84828501610a45565b6040830152506060610aef84828501610b27565b606083015250608082013567ffffffffffffffff811115610b0f57600080fd5b610b1b84828501610a1b565b60808301525092915050565b600081359050610b368161101f565b92915050565b600081519050610b4b8161101f565b92915050565b600060208284031215610b6357600080fd5b6000610b71848285016109dc565b91505092915050565b60008060408385031215610b8d57600080fd5b600083013567ffffffffffffffff811115610ba757600080fd5b610bb3858286016109f1565b9250506020610bc485828601610b27565b9150509250929050565b600060208284031215610be057600080fd5b6000610bee84828501610b3c565b91505092915050565b610c0081610ee3565b82525050565b6000610c1182610e32565b610c1b8185610e3d565b9350610c2b818560208601610f2e565b80840191505092915050565b6000610c44602683610e48565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610caa602083610e48565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b610ce681610f15565b82525050565b6000610cf88284610c06565b915081905092915050565b6000602082019050610d186000830184610bf7565b92915050565b60006020820190508181036000830152610d3781610c37565b9050919050565b60006020820190508181036000830152610d5781610c9d565b9050919050565b6000602082019050610d736000830184610cdd565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610da057610d9f610fd9565b5b8060405250919050565b600067ffffffffffffffff821115610dc557610dc4610fd9565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610df157610df0610fd9565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610e1d57610e1c610fd9565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610e6482610f15565b9150610e6f83610f15565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ea457610ea3610faa565b5b828201905092915050565b6000610eba82610f15565b9150610ec583610f15565b925082821015610ed857610ed7610faa565b5b828203905092915050565b6000610eee82610ef5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610f4c578082015181840152602081019050610f31565b83811115610f5b576000848401525b50505050565b6000610f6c82610f15565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f9f57610f9e610faa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61101181610ee3565b811461101c57600080fd5b50565b61102881610f15565b811461103357600080fd5b5056fea26469706673582212205e57c2add07afa64379e4eb7c8c78a46f80bd49f5210697120ed3216be22865564736f6c63430008000033a26469706673582212207ea981acb4b7bd4f249e857d1e08793a8bf6108908c370180e32c2eddd00eee264736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80638e1a55fc1461003b578063f3701da214610059575b600080fd5b610043610089565b6040516100509190610232565b60405180910390f35b610073600480360381019061006e91906101a6565b610099565b6040516100809190610232565b60405180910390f35b600061009433610099565b905090565b60006040516100a790610184565b604051809103906000f0801580156100c3573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b836040518263ffffffff1660e01b81526004016100ff91906101fc565b600060405180830381600087803b15801561011957600080fd5b505af115801561012d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167f587ece4cd19692c5be1a4184503d607d45542d2aca0698c0068f52e09ccb541c826040516101779190610217565b60405180910390a2919050565b611147806102df83390190565b6000813590506101a0816102c7565b92915050565b6000602082840312156101b857600080fd5b60006101c684828501610191565b91505092915050565b6101d881610291565b82525050565b6101e78161025f565b82525050565b6101f68161024d565b82525050565b600060208201905061021160008301846101ed565b92915050565b600060208201905061022c60008301846101cf565b92915050565b600060208201905061024760008301846101de565b92915050565b600061025882610271565b9050919050565b600061026a82610271565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029c826102a3565b9050919050565b60006102ae826102b5565b9050919050565b60006102c082610271565b9050919050565b6102d08161024d565b81146102db57600080fd5b5056fe608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b61106c806100db6000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100655780638da5cb5b1461007c5780639c328fb3146100a7578063e4c73dec146100d2578063f2fde38b146100ee578063f8a8fd6d1461011757610060565b3661006057005b600080fd5b34801561007157600080fd5b5061007a61012e565b005b34801561008857600080fd5b50610091610281565b60405161009e9190610d03565b60405180910390f35b3480156100b357600080fd5b506100bc6102aa565b6040516100c99190610d5e565b60405180910390f35b6100ec60048036038101906100e79190610b7a565b6102b0565b005b3480156100fa57600080fd5b5061011560048036038101906101109190610b51565b6106f0565b005b34801561012357600080fd5b5061012c6108b2565b005b6101366108cd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90610d3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b6102b86108cd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033c90610d3e565b60405180910390fd5b60008167ffffffffffffffff811115610387577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103b55781602001602082028036833780820191505090505b50905060005b83518110156106ea5760008482815181106103ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040015190506000858381518110610448577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160800151905060005b8581101561051257600082828151811061049c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060038111156104fe5760008683815181106104ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508082602001860152505b50808061050a90610f61565b915050610459565b5060008087858151811061054f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168886815181106105aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160200151856040516105c49190610cec565b60006040518083038185875af1925050503d8060008114610601576040519150601f19603f3d011682016040523d82523d6000602084013e610606565b606091505b50915091508161061a573d6000803e3d6000fd5b6000888681518110610655577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160600151905060008111156106d257818060200190518101906106809190610bce565b8760018361068e9190610eaf565b815181106106c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b505050505080806106e290610f61565b9150506103bb565b50505050565b6106f86108cd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90610d3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ec90610d1e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60018060008282546108c49190610e59565b92505081905550565b600033905090565b60006108e86108e384610daa565b610d79565b9050808382526020820190508260005b85811015610928578135850161090e8882610a6f565b8452602084019350602083019250506001810190506108f8565b5050509392505050565b600061094561094084610dd6565b610d79565b9050808382526020820190508285602086028201111561096457600080fd5b60005b85811015610994578161097a8882610b27565b845260208401935060208301925050600181019050610967565b5050509392505050565b60006109b16109ac84610e02565b610d79565b9050828152602081018484840111156109c957600080fd5b6109d4848285610f1f565b509392505050565b6000813590506109eb81611008565b92915050565b600082601f830112610a0257600080fd5b8135610a128482602086016108d5565b91505092915050565b600082601f830112610a2c57600080fd5b8135610a3c848260208601610932565b91505092915050565b600082601f830112610a5657600080fd5b8135610a6684826020860161099e565b91505092915050565b600060a08284031215610a8157600080fd5b610a8b60a0610d79565b90506000610a9b848285016109dc565b6000830152506020610aaf84828501610b27565b602083015250604082013567ffffffffffffffff811115610acf57600080fd5b610adb84828501610a45565b6040830152506060610aef84828501610b27565b606083015250608082013567ffffffffffffffff811115610b0f57600080fd5b610b1b84828501610a1b565b60808301525092915050565b600081359050610b368161101f565b92915050565b600081519050610b4b8161101f565b92915050565b600060208284031215610b6357600080fd5b6000610b71848285016109dc565b91505092915050565b60008060408385031215610b8d57600080fd5b600083013567ffffffffffffffff811115610ba757600080fd5b610bb3858286016109f1565b9250506020610bc485828601610b27565b9150509250929050565b600060208284031215610be057600080fd5b6000610bee84828501610b3c565b91505092915050565b610c0081610ee3565b82525050565b6000610c1182610e32565b610c1b8185610e3d565b9350610c2b818560208601610f2e565b80840191505092915050565b6000610c44602683610e48565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610caa602083610e48565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b610ce681610f15565b82525050565b6000610cf88284610c06565b915081905092915050565b6000602082019050610d186000830184610bf7565b92915050565b60006020820190508181036000830152610d3781610c37565b9050919050565b60006020820190508181036000830152610d5781610c9d565b9050919050565b6000602082019050610d736000830184610cdd565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610da057610d9f610fd9565b5b8060405250919050565b600067ffffffffffffffff821115610dc557610dc4610fd9565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610df157610df0610fd9565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610e1d57610e1c610fd9565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610e6482610f15565b9150610e6f83610f15565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ea457610ea3610faa565b5b828201905092915050565b6000610eba82610f15565b9150610ec583610f15565b925082821015610ed857610ed7610faa565b5b828203905092915050565b6000610eee82610ef5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610f4c578082015181840152602081019050610f31565b83811115610f5b576000848401525b50505050565b6000610f6c82610f15565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f9f57610f9e610faa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61101181610ee3565b811461101c57600080fd5b50565b61102881610f15565b811461103357600080fd5b5056fea26469706673582212205e57c2add07afa64379e4eb7c8c78a46f80bd49f5210697120ed3216be22865564736f6c63430008000033a26469706673582212207ea981acb4b7bd4f249e857d1e08793a8bf6108908c370180e32c2eddd00eee264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2437:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:12"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:12",
                "type": ""
              }
            ],
            "src": "7:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:12",
                "type": ""
              }
            ],
            "src": "152:262:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "493:74:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "510:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "554:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "515:38:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "515:45:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "503:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "503:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "503:58:12"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "481:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "488:3:12",
                "type": ""
              }
            ],
            "src": "420:147:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "654:61:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "671:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "702:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "676:25:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "676:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "664:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "664:45:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "664:45:12"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "642:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "649:3:12",
                "type": ""
              }
            ],
            "src": "573:142:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "786:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "803:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "826:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "808:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "808:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "796:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:37:12"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "774:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "781:3:12",
                "type": ""
              }
            ],
            "src": "721:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "943:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "953:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "965:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "976:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "961:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "961:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "953:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1033:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1046:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1057:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1042:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1042:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "989:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "989:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "989:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "915:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "927:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "938:4:12",
                "type": ""
              }
            ],
            "src": "845:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1179:132:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1189:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1201:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1212:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1197:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1189:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1277:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1290:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1301:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1286:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1286:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1225:51:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1225:79:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1225:79:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1151:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1163:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1174:4:12",
                "type": ""
              }
            ],
            "src": "1073:238:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1431:140:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1441:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1453:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1464:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1449:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1449:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1441:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1537:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1550:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1561:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1546:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1546:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1477:59:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:87:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:87:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1403:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1415:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1426:4:12",
                "type": ""
              }
            ],
            "src": "1317:254:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1622:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1632:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1661:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1643:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1643:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1632:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1604:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1614:7:12",
                "type": ""
              }
            ],
            "src": "1577:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1732:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1742:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1771:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1753:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1753:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1742:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1714:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1724:7:12",
                "type": ""
              }
            ],
            "src": "1679:104:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1834:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1844:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1859:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1855:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1844:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1816:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1826:7:12",
                "type": ""
              }
            ],
            "src": "1789:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1989:66:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1999:50:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2043:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2012:30:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2012:37:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1999:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1969:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1979:9:12",
                "type": ""
              }
            ],
            "src": "1921:134:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2121:66:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2131:50:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2175:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2144:30:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2144:37:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2131:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2101:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2111:9:12",
                "type": ""
              }
            ],
            "src": "2061:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2253:53:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2263:37:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2294:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2276:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2276:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2263:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2233:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2243:9:12",
                "type": ""
              }
            ],
            "src": "2193:113:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2355:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2412:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2421:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2424:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2414:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2414:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2414:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2378:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2403:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2385:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2385:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2375:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2375:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2368:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2365:2:12"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2348:5:12",
                "type": ""
              }
            ],
            "src": "2312:122:12"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "90:422:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "90:422:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;180:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;290:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;180:104;215:23;260:17;266:10;260:5;:17::i;:::-;250:27;;180:104;:::o;290:220::-;337:23;390:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;372:32;;422:7;414:34;;;449:6;414:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;479:6;471:24;;;487:7;471:24;;;;;;:::i;:::-;;;;;;;;290:220;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:12:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:147::-;515:45;554:5;515:45;:::i;:::-;510:3;503:58;493:74;;:::o;573:142::-;676:32;702:5;676:32;:::i;:::-;671:3;664:45;654:61;;:::o;721:118::-;808:24;826:5;808:24;:::i;:::-;803:3;796:37;786:53;;:::o;845:222::-;;976:2;965:9;961:18;953:26;;989:71;1057:1;1046:9;1042:17;1033:6;989:71;:::i;:::-;943:124;;;;:::o;1073:238::-;;1212:2;1201:9;1197:18;1189:26;;1225:79;1301:1;1290:9;1286:17;1277:6;1225:79;:::i;:::-;1179:132;;;;:::o;1317:254::-;;1464:2;1453:9;1449:18;1441:26;;1477:87;1561:1;1550:9;1546:17;1537:6;1477:87;:::i;:::-;1431:140;;;;:::o;1577:96::-;;1643:24;1661:5;1643:24;:::i;:::-;1632:35;;1622:51;;;:::o;1679:104::-;;1753:24;1771:5;1753:24;:::i;:::-;1742:35;;1732:51;;;:::o;1789:126::-;;1866:42;1859:5;1855:54;1844:65;;1834:81;;;:::o;1921:134::-;;2012:37;2043:5;2012:37;:::i;:::-;1999:50;;1989:66;;;:::o;2061:126::-;;2144:37;2175:5;2144:37;:::i;:::-;2131:50;;2121:66;;;:::o;2193:113::-;;2276:24;2294:5;2276:24;:::i;:::-;2263:37;;2253:53;;;:::o;2312:122::-;2385:24;2403:5;2385:24;:::i;:::-;2378:5;2375:35;2365:2;;2424:1;2421;2414:12;2365:2;2355:79;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"./Batcher.sol\";\n\ncontract BatcherFactory {\n    event Created(address indexed owner, address batcher);\n\n    function build() external returns (address payable batcher) {\n        batcher = build(msg.sender);\n    }\n\n    function build(address _owner) public returns (address payable batcher) {\n        batcher = payable(new Batcher());\n        Batcher(batcher).transferOwnership(_owner);\n        emit Created(_owner, batcher);        \n    }\n}",
  "sourcePath": "/Users/ovdbigge/argent/batcher/contracts/BatcherFactory.sol",
  "ast": {
    "absolutePath": "/Users/ovdbigge/argent/batcher/contracts/BatcherFactory.sol",
    "exportedSymbols": {
      "Batcher": [
        162
      ],
      "BatcherFactory": [
        215
      ],
      "Context": [
        2104
      ],
      "Ownable": [
        2213
      ]
    },
    "id": 216,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 164,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:1"
      },
      {
        "absolutePath": "/Users/ovdbigge/argent/batcher/contracts/Batcher.sol",
        "file": "./Batcher.sol",
        "id": 165,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 163,
        "src": "65:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          162
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 215,
        "linearizedBaseContracts": [
          215
        ],
        "name": "BatcherFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 171,
            "name": "Created",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "134:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "batcher",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "157:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "133:40:1"
            },
            "src": "120:54:1"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "240:44:1",
              "statements": [
                {
                  "expression": {
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "batcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "250:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 178,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "266:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "266:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 177,
                        "name": "build",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "260:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_payable_$",
                          "typeString": "function (address) returns (address payable)"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "260:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "250:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "250:27:1"
                }
              ]
            },
            "functionSelector": "8e1a55fc",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "build",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:2:1"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "batcher",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "215:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "214:25:1"
            },
            "scope": 215,
            "src": "180:104:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "362:148:1",
              "statements": [
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 191,
                      "name": "batcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "372:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "390:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Batcher_$162_$",
                              "typeString": "function () returns (contract Batcher)"
                            },
                            "typeName": {
                              "id": 195,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 194,
                                "name": "Batcher",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 162,
                                "src": "394:7:1"
                              },
                              "referencedDeclaration": 162,
                              "src": "394:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Batcher_$162",
                                "typeString": "contract Batcher"
                              }
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "390:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Batcher_$162",
                            "typeString": "contract Batcher"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Batcher_$162",
                            "typeString": "contract Batcher"
                          }
                        ],
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "382:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "382:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "382:22:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "372:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "372:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 205,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "449:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 202,
                            "name": "batcher",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "422:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 201,
                          "name": "Batcher",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "414:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Batcher_$162_$",
                            "typeString": "type(contract Batcher)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "414:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Batcher_$162",
                          "typeString": "contract Batcher"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2212,
                      "src": "414:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "414:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "414:42:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "479:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 210,
                        "name": "batcher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "487:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 208,
                      "name": "Created",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "471:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "471:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "EmitStatement",
                  "src": "466:29:1"
                }
              ]
            },
            "functionSelector": "f3701da2",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "build",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "305:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "304:16:1"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "batcher",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "337:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "336:25:1"
            },
            "scope": 215,
            "src": "290:220:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 216,
        "src": "90:422:1"
      }
    ],
    "src": "40:472:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/ovdbigge/argent/batcher/contracts/BatcherFactory.sol",
    "exportedSymbols": {
      "Batcher": [
        162
      ],
      "BatcherFactory": [
        215
      ],
      "Context": [
        2104
      ],
      "Ownable": [
        2213
      ]
    },
    "id": 216,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 164,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:1"
      },
      {
        "absolutePath": "/Users/ovdbigge/argent/batcher/contracts/Batcher.sol",
        "file": "./Batcher.sol",
        "id": 165,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 163,
        "src": "65:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          162
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 215,
        "linearizedBaseContracts": [
          215
        ],
        "name": "BatcherFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 171,
            "name": "Created",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "134:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "batcher",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "157:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "133:40:1"
            },
            "src": "120:54:1"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "240:44:1",
              "statements": [
                {
                  "expression": {
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "batcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "250:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 178,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "266:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "266:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 177,
                        "name": "build",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "260:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_payable_$",
                          "typeString": "function (address) returns (address payable)"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "260:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "250:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "250:27:1"
                }
              ]
            },
            "functionSelector": "8e1a55fc",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "build",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:2:1"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "batcher",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "215:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "214:25:1"
            },
            "scope": 215,
            "src": "180:104:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "362:148:1",
              "statements": [
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 191,
                      "name": "batcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "372:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "390:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Batcher_$162_$",
                              "typeString": "function () returns (contract Batcher)"
                            },
                            "typeName": {
                              "id": 195,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 194,
                                "name": "Batcher",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 162,
                                "src": "394:7:1"
                              },
                              "referencedDeclaration": 162,
                              "src": "394:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Batcher_$162",
                                "typeString": "contract Batcher"
                              }
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "390:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Batcher_$162",
                            "typeString": "contract Batcher"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Batcher_$162",
                            "typeString": "contract Batcher"
                          }
                        ],
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "382:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "382:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "382:22:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "372:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "372:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 205,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "449:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 202,
                            "name": "batcher",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "422:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 201,
                          "name": "Batcher",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "414:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Batcher_$162_$",
                            "typeString": "type(contract Batcher)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "414:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Batcher_$162",
                          "typeString": "contract Batcher"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2212,
                      "src": "414:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "414:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "414:42:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "479:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 210,
                        "name": "batcher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "487:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 208,
                      "name": "Created",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "471:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "471:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "EmitStatement",
                  "src": "466:29:1"
                }
              ]
            },
            "functionSelector": "f3701da2",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "build",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "305:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "304:16:1"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "batcher",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "337:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "336:25:1"
            },
            "scope": 215,
            "src": "290:220:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 216,
        "src": "90:422:1"
      }
    ],
    "src": "40:472:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x587ece4cd19692c5be1a4184503d607d45542d2aca0698c0068f52e09ccb541c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "batcher",
              "type": "address"
            }
          ],
          "name": "Created",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC597E577110b163F7F2D6085015E831a9c823558",
      "transactionHash": "0xb39560c304272e5b7926115d952bcf74e084c9bc4a90ae47e073a8fdec2d38bf"
    },
    "4": {
      "links": {},
      "address": "0x697abff89Ece0bB352124Eed4116327c54BE71E3",
      "events": {
        "0x587ece4cd19692c5be1a4184503d607d45542d2aca0698c0068f52e09ccb541c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "batcher",
              "type": "address"
            }
          ],
          "name": "Created",
          "type": "event"
        }
      }
    },
    "42": {
      "events": {
        "0x587ece4cd19692c5be1a4184503d607d45542d2aca0698c0068f52e09ccb541c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "batcher",
              "type": "address"
            }
          ],
          "name": "Created",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0ae5F774123Ab77e31A4efFD8c019aB87238d969",
      "transactionHash": "0xdb526f8b591b6421f8126d93799710a749b4a7996e1d4bc1bd6ee5e696add1ae"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-22T12:17:10.784Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}